{"version":3,"sources":["utils/Form.js","components/Todo/Form.js","components/Todo/List.js","components/Todo/Connect.js","utils/Layout.js","pages/Home.js","pages/Todo.js","routers/config.js","routers/routers.js","components/Navbar/navbar.js","utils/index.js","components/Navbar/index.js","routers/index.js","components/Drawer/index.js","components/Form/Login.js","App.js"],"names":["Item","Form","create","_temp","_class","_PureComponent","FormExport","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","syncDataWithFields","values","form","getFieldsValue","_this$props","data","errors","keys","forEach","key","setFields","defineProperty","value","Error","undefined","validateFields","err","console","log","save","handleCancel","e","preventDefault","resetFields","renderFields","bind","assertThisInitialized","handleSubmit","inherits","createClass","_ref","id","options","element","react_default","a","createElement","getFieldDecorator","form_default","style","width","layout","onSubmit","title","fields","map","hideSubmit","button_default","type","htmlType","submitText","hideCancel","onClick","PureComponent","defaultProps","FormTodo","state","rules","required","input_default","placeholder","TodoList","_this2","list_default","itemLayout","dataSource","renderItem","index","description","actions","handleDelete","Meta","nextProps","prevState","Component","Todo","connect","Form_FormTodo","_ref2","todos","List_TodoList","Layout","row","margin","justify","gutter","sideCol","xs","span","order","sm","md","lg","xl","mainCol","_this$state","row_default","col_default","left","children","right","Home","Layout_Layout","Connect_TodoList","TodoListPage","sideColumns","mainColumns","config","name","path","component","exact","icon","MenuList","route","routes","Menus","menu","theme","mode","defaultSelectedKeys","items","concat","es_icon","Link","to","String","toLowerCase","replace","text","toUpperCase","menuList","navbar_Menus","Navbar_MenuList","Header","Content","DrawerMenu","setDrawer","drawer","icon_default","className","MainRouter","BrowserRouter","Fragment","length","assign","Route","Drawer","drawer_default","placement","onClose","maskClosable","visible","height","overflow","paddingBottom","FormLogin","App","setMenu","layout_default","routers","Drawer_Drawer","user","Login_FormLogin","login","loading","App_App"],"mappings":"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","file":"static/js/3.0841b44b.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { string, array, object, func } from 'prop-types'\nimport Form from 'antd/lib/form'\nimport Button from 'antd/lib/button'\n\nconst { Item } = Form\nexport default Form.create()(\n  class FormExport extends PureComponent {\n    static propTypes = {\n      layout: string.isRequired,\n      fields: array.isRequired,\n      form: object,\n      title: string,\n      save: func,\n      data: object,\n      errors: object,\n    }\n\n    static defaultProps = {\n      layout: 'horizontal',\n      fields: [],\n      title: '',\n      hideCancel: false,\n      hideSubmit: false,\n      submitText: 'Submit',\n    }\n\n    constructor(props) {\n      super(props)\n      this.renderFields = this.renderFields.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    syncDataWithFields = () => {\n      const values = this.props.form.getFieldsValue()\n      const { data, errors } = this.props\n      Object.keys(values).forEach(key => {\n        this.props.form.setFields({\n          [key]: {\n            value: data[key] || values[key],\n            errors:\n              errors === Object(errors) && key in errors\n                ? [new Error(errors[key])]\n                : undefined,\n          },\n        })\n      })\n    }\n\n    renderFields({ id, options, element }) {\n      return (\n        <Item key={id}>\n          {this.props.form.getFieldDecorator(id, options)(element)}\n        </Item>\n      )\n    }\n\n    validateFields = (err, values) => {\n      if (err) return\n      console.log(values)\n      this.props.save(values)\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.form.validateFields(this.validateFields)\n    }\n\n    handleCancel = e => {\n      e.preventDefault()\n      this.props.form.resetFields()\n    }\n\n    render() {\n      return (\n        <Form\n          style={{ width: '100%' }}\n          layout={this.props.layout}\n          onSubmit={this.handleSubmit}\n        >\n          <h2> {this.props.title} </h2>\n          {this.props.fields.map(this.renderFields)}\n          <Item>\n            {!this.props.hideSubmit && (\n              <Button type=\"primary\" htmlType=\"submit\">\n                {this.props.submitText}\n              </Button>\n            )}\n            {'   '}\n            {!this.props.hideCancel && (\n              <Button onClick={this.handleCancel}>Cancel</Button>\n            )}\n          </Item>\n        </Form>\n      )\n    }\n  },\n)\n","import React, { PureComponent } from 'react'\nimport { func } from 'prop-types'\nimport Form from 'utils/Form'\nimport Input from 'antd/lib/input'\n\nexport default class FormTodo extends PureComponent {\n  static propTypes = {\n    save: func,\n  }\n\n  state = {\n    fields: [\n      {\n        id: 'title',\n        options: {\n          rules: [\n            {\n              required: true,\n            },\n          ],\n        },\n        element: <Input placeholder=\"Create your Todo...\" />,\n      },\n    ],\n  }\n\n  render() {\n    return (\n      <Form\n        save={this.props.save}\n        title=\"Todo\"\n        fields={this.state.fields}\n        hideCancel\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport List from 'antd/lib/list'\nimport { arrayOf, func, string, shape } from 'prop-types'\n\nexport default class TodoList extends Component {\n  state = {\n    data: [],\n  }\n\n  static propTypes = {\n    data: arrayOf(\n      shape({\n        title: string.isRequired,\n        id: string,\n      }),\n    ).isRequired,\n    handleDelete: func.isRequired,\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return nextProps.data !== prevState.data ? { data: nextProps.data } : null\n  }\n\n  render() {\n    return (\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={this.state.data}\n        renderItem={({ id, title, description }, index) => (\n          <List.Item\n            actions={[\n              <span key={index} onClick={e => this.props.handleDelete(id)}>\n                Delete\n              </span>,\n            ]}\n          >\n            <List.Item.Meta title={title} description={description} />\n          </List.Item>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'unistore/react'\nimport Form from './Form'\nimport List from './List'\n\nexport const Todo = connect(\n  [],\n  {\n    save: 'createTodo',\n  },\n)(({ save }) => <Form save={save} />)\n\nexport const TodoList = connect(\n  'todos',\n  { handleDelete: 'deleteTodo' },\n)(({ todos, handleDelete }) => (\n  <List handleDelete={handleDelete} data={todos} />\n))\n","import React, {PureComponent} from 'react'\nimport {element} from 'prop-types'\nimport Row from 'antd/lib/row'\nimport Col from 'antd/lib/col'\n\nexport default class Layout extends PureComponent {\n    static propTypes = {\n      left: element,\n      right: element,\n      children: element.isRequired,\n    }\n\n    state = {\n      row: {\n        style: {margin: 13},\n        justify: 'center',\n        gutter: 32,\n        type: 'flex',\n      },\n      sideCol: {\n        xs: {span: 12*2, order: 2},\n        sm: {span: 12*2, order: 2},\n        md: {span: 12*2, order: 2},\n        lg: {span: 6},\n        xl: {span: 6},\n      },\n      mainCol: {\n        xs: {span: 24, order: 1},\n        sm: {span: 24, order: 1},\n        md: {span: 24, order: 1},\n        lg: {span: 6*2, order: 2},\n        xl: {span: 6*2, order: 2},\n      },\n    }\n    /**\n     * @return {element} React.element\n     */\n    render() {\n      const {row, sideCol, mainCol} = this.state\n      return (\n        <Row {...row} >\n          <Col {...sideCol}>\n            {this.props.left}\n          </Col>\n          <Col {...mainCol}>\n            {this.props.children}\n          </Col>\n          <Col {...sideCol}>\n            {this.props.right}\n          </Col>\n        </Row>\n      )\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Todo, TodoList } from 'components/Todo/Connect'\nimport Layout from 'utils/Layout'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <Layout>\n        <Todo />\n        <TodoList />\n      </Layout>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Row from 'antd/lib/row'\nimport Col from 'antd/lib/col'\nimport { TodoList } from 'components/Todo/Connect'\n\nexport default class TodoListPage extends Component {\n  state = {\n    sideColumns: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n      md: { span: 24 },\n      lg: { span: 6 },\n      xl: { span: 6 },\n    },\n    mainColumns: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n      md: { span: 24 },\n      lg: { span: 18 },\n      xl: { span: 18 },\n    },\n  }\n  render() {\n    const { sideColumns, mainColumns } = this.state\n    return (\n      <Row style={{ margin: 13 }} justify=\"center\" gutter={32} type=\"flex\">\n        <Col {...sideColumns} />\n        <Col {...mainColumns}>\n          <TodoList />\n        </Col>\n      </Row>\n    )\n  }\n}\n","import { Home } from 'pages'\nimport { Todo } from 'pages'\n// import {lazy} from 'react'\n// const Home = lazy(() => import('pages/Home'))\n// const Report = lazy(() => import('pages/Report'))\n\nexport default [\n  {\n    name: 'home',\n    path: '/',\n    component: Home,\n    exact: true,\n    icon: '',\n  },\n  {\n    name: 'todo',\n    path: '/todo',\n    component: Todo,\n    exact: true,\n    icon: '',\n  },\n  {\n    name: '',\n    path: '/report/:slug',\n    component: Todo,\n    exact: true,\n    icon: '',\n  },\n]\n","import React, {Fragment} from 'react'\nimport {Route} from 'react-router-dom'\nimport config from './config'\n\n/**\n * Navigation Menu config\n * @return {array} object for make menu\n */\nconst MenuList = config.map((route) => {\n  return {\n    path: route.path,\n    name: route.name,\n    routes: 'routes' in route ? route.routes : [],\n    icon: route.icon,\n  }\n})\n\n/**\n * Sub Route Component\n * @param {object} route\n * @return {element} react\n */\nconst withSubRoutes = (route) => (\n  <Fragment>\n    <Route path={route.path} component={route.component} />\n    {route.routes.map((subroute, key) => (\n      <Route {...subroute} key={`${subroute.name}:${key}`} />\n    ))}\n  </Fragment>\n)\n\nexport {MenuList, withSubRoutes, config}\n","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {array} from 'prop-types'\nimport {ucword} from 'utils'\nimport {Menu, Icon} from 'antd'\n\n// const {PUBLIC_URL} = process.env\n\nexport default class Menus extends Component {\n  static propTypes = {\n    items: array.isRequired,\n  }\n\n  static defaultProps = {\n    items: [\n      {\n        path: '/',\n        name: 'Home',\n        routes: [{path: 'hello', name: 'hello'}],\n      },\n    ],\n  }\n\n  render() {\n    return (\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={['menu:item:1']}>\n        {this.props.items.map(({name, icon, path}, key) => {\n          return (\n            <Menu.Item key={`menu:item:${key+1}`}>\n              {icon && icon !== '' &&\n                  <Icon theme=\"filled\" type={icon} />}\n              <Link to={path}>{ucword(name)}</Link>\n            </Menu.Item>\n          )\n        })}\n      </Menu>\n    )\n  }\n}\n","/**\n * Replace Special Character and Return Text as Ucword case\n * @param {string} text\n * @return {string} text\n */\nconst Ucword = (text) =>\n  String(text)\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9-]/g, '  ')\n    .replace(/\\b[a-z]/g, (text) => text.toUpperCase())\n\nconst textOnly = (text, limit=0, except=' ...') => {\n  if (text.length > 100) {\n    return text\n      .split(/<\\s*p[^>]*>([^<]*)<\\s*\\/\\s*p\\s*>/)\n      .filter((v) => v.length > 100)[0]\n      .replace(/<[^>]+>/g, '')\n      .replace(/i&#x27;m/g, '')\n      .substring(0, limit) + except\n  }\n  return text\n    .replace(/<[^>]+>/g, '')\n    .substring(0, limit) + except\n}\n\nconst dateFormat = 'DD/MM/YYYY HH:mm:ss A'\n\nexport {\n  Ucword as ucword,\n  dateFormat,\n  textOnly,\n}\n","import React, {Component} from 'react'\nimport Menus from './navbar'\nimport {array} from 'prop-types'\nimport {connect} from 'unistore/react'\n\nexport const MenuList = connect('menuList')(\n  ({menuList}) => <Menus items={menuList}/>\n)\n\nclass Navbar extends Component {\n  static propTypes = {\n    menu: array,\n  };\n\n  static defaultProps = {\n    menu: [],\n  }\n\n  render() {\n    return <MenuList />\n  }\n}\n\nexport {\n  Navbar,\n}\n","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport {\n  config,\n  withSubRoutes,\n} from './routers'\nimport {MenuList as Menus} from 'components/Navbar'\nimport Icon from 'antd/lib/icon'\nimport Layout from 'antd/lib/layout'\nimport {connect} from 'unistore/react'\nconst {Header, Content} = Layout\n\nconst DrawerMenu = connect('drawer', {setDrawer: 'setDrawer'})(({drawer, setDrawer})=>\n  <Icon\n    type={\n      (drawer && 'menu-unfold') || 'menu-fold'\n    }\n    className=\"menu-drawer\"\n    onClick={(e) => setDrawer()}/>\n)\n/**\n * Main Routers Of Application\n * @params {object} props\n * @params {object} store\n * @return {object} Router Element\n */\nexport const MainRouter = () => {\n  return (\n    <Router>\n      <>\n        <Header theme=\"dark\" className=\"header\">\n          <DrawerMenu/>\n          <Menus/>\n        </Header>\n        <Content className=\"content\">\n          {config.map((route, key) => {\n            return route.routes && route.routes.length > 0\n              ? (<withSubRoutes\n                {...route}\n                key={`route:${route.name}:${key}`}\n              />)\n              : (<Route key={`route:${route.name}:${key}`} {...route} />)\n          })}\n        </Content>\n      </>\n    </Router>\n  )\n}\n\nexport default MainRouter\n","import React, {Component} from 'react'\nimport {bool, func} from 'prop-types'\nimport AntDrawer from 'antd/lib/drawer'\n\nexport default class Drawer extends Component {\n  static defaultProps = {\n    visible: false,\n    onClose: () => null,\n    placement: 'left',\n    style: {\n      height: 'calc(100% - 55px)',\n      overflow: 'auto',\n      paddingBottom: 53,\n    },\n    maskClosable: true,\n  }\n\n  static propTypes = {\n    visible: bool,\n    onClose: func,\n  }\n\n  render() {\n    return (\n      <AntDrawer\n        placement={this.props.placement}\n        onClose={this.props.onClose}\n        maskClosable={this.props.maskClosable}\n        visible={this.props.visible}\n        style={this.props.style}>\n        {this.props.children}\n      </AntDrawer>\n    )\n  }\n}\n","import React, {PureComponent} from 'react'\nimport Form from 'utils/Form'\nimport Input from 'antd/lib/input'\n// import Upload from 'antd/lib/upload'\n// import Icon from 'antd/lib/icon'\n\n// const {Dragger} = Upload\n\nexport default class FormLogin extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fields: [\n        {\n          id: 'username',\n          options: {\n            rules: [\n              {\n                required: true,\n              },\n            ],\n          },\n          element: (\n            <Input placeholder=\"Username / Email\" />\n          ),\n        },\n        {\n          id: 'password',\n          options: {\n            rules: [\n              {\n                required: true,\n              },\n            ],\n          },\n          element: (\n            <Input type=\"password\" placeholder=\"Password...\" />\n          ),\n        },\n      ],\n    }\n  }\n\n  render() {\n    return (\n      <Form save={this.props.save} title=\"Login\" fields={this.state.fields}/>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport { bool, array, func } from 'prop-types'\nimport Layout from 'antd/lib/layout'\nimport MainRouter from 'routers'\nimport { MenuList } from 'routers/routers'\nimport Drawer from 'components/Drawer'\nimport FormLogin from 'components/Form/Login'\n\nimport { connect } from 'unistore/react'\n\n/**\n * App is Main component render in Index.js\n */\nclass App extends Component {\n  static propTypes = {\n    loading: bool,\n    postLoading: bool,\n    drawer: bool,\n    posts: array,\n    categories: array,\n    pages: array,\n    menuList: array,\n    setDrawer: func,\n    setMenu: func,\n  }\n\n  static defaultProps = {\n    loading: true,\n    drawer: false,\n    menuList: [],\n  }\n\n  state = {\n    drawer: {},\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return (\n      (nextProps.drawer !== prevState.drawer && {\n        drawer: {\n          visible: nextProps.drawer,\n          onClose: e => nextProps.setDrawer(),\n        },\n      }) ||\n      null\n    )\n  }\n\n  componentDidMount() {\n    this.props.setMenu(MenuList)\n  }\n\n  render() {\n    return (\n      <Layout theme=\"dark\">\n        <MainRouter />\n        <Drawer {...this.state.drawer}>\n          {!this.props.user && <FormLogin save={this.props.login} />}\n        </Drawer>\n      </Layout>\n    )\n  }\n}\n\nexport default connect(\n  ['drawer', 'menuList', 'user'],\n  {\n    setMenu: 'setMenu',\n    setDrawer: 'setDrawer',\n    login: 'login',\n  },\n)(props => <App {...props} />)\n"],"sourceRoot":""}